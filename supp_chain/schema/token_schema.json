// ideal js heircarchy schema:
{
  "structure": [{
    "owner_contract_address": {
          "token_id": "token number",
          "name": "token name", 
          "num_tokens": "number of tokens",

          "parent_tokens": [{
            "contract_address": "parent contract address",
            "token_id": "parent token id"
          }],

          "child_tokens": [{
            "contract_address": "child contract address",
            "token_id": "child token id"
          }],

          "description": "description about the NFT.",
          "properties": {
              "ownership_stage": "composable asset supply chain stage",
              "contract_address": "owner contract address", 
              "image": "image link/Null", 
              "description": "description about the NFT.",
              "recycled": "boolean - true/false",
          }
    }
  }] 
}

// erc-721 metadata storage compliance schema:
const metadata = await nftStorage.store({
  token_id: tokenID,
  owner_address: accounts[0],
  name: tokenName, 
  image: blob, 
  description: "description about the NFT.",
  properties: {
      num_child_tokens: numChildTokens,
      ownership_stage: "composable asset supply chain stage",
      contract_address: "owner contract address", 
      recycled: "boolean - true/false",

      parent_tokens: [
        {
          contract_address: "parent contract address",
          token_id: parentTokenID,
        }
      ],

      child_tokens: [
        {
          contract_address: "child contract address",
          token_id: childTokenID,
        }
      ]
  }
});
